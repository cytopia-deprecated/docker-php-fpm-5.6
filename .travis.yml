###
### Enable sudo (required for docker service)
###
sudo: required


###
### Language
###
language: python


###
### Add services
###
services:
  - docker


###
### Build Matrix definition
###
env:
  global:
    - IMAGE: devilbox/php-fpm-5.6
    # travis encrypt DOCKER_USERNAME=user
    # travis encrypt DOCKER_PASSWORD=pass
    # Must be regenerated when repository name/owner changes
    # DOCKER_USERNAME
    - secure: "KtHYQ9QJGi/z8QqvEKBzNREDOlX2NvKW36Viw/F3zS9bV6r8Rcr4x1abmqd4dLzbfcCYQbGusOWmkpQ+gqBrSc6aSZIFB/soQgB+vWmzgfFfsd3VkJgWkaHq6FVZZwwpHy/To4hLhSEUY2fDzWmYRHn6Ey1nJrlyV4tmxtXHsjHUXxNTdRQ9W6kk9nOISNaBrg4+YOcI0gTJIf9+NT0lJK9FtaaeG/sIdaddS4wJfx6K+rmSAlCMc5T3+HOQUTeutc93d7yThLchG5BcEHFPKnSVG9pT72uDyC/UzhRmOaJjaUd9srXehBuNg0KkzYaSFO3JYk+LxEowPipUV469q+pPkwR1IH5/FVDinhajjtRN/J8iDkCEED0Cs2wizSJ+kTM8j4ub5YTqmPK3sZuNqHJPdNot79qknEwsKiHgJBcOCRcn16zj+2WNm3qVbaba/RvCkhdhny0OEazAULEeJHqTxMT9lDx8aKjiwiasNmVAdJpEQTHKWSzmUPB1tuFXM9jE30YeDxHDM+0AeyJkf+Hq+86d6RZT4qYSBhkX230Uo7dlxOKW1gdNiayZpi2jkz+6NYE8rtqiE7dwzBKWambAxWbiw+Z59/DL+gcl5HKSxAqIr6ZfHwPqpWBsi1ZIDZUpPz0qWynTW73pR0Y0rR5rGLcPSUJNK0B+fnKEyPQ="
    # DOCKER_PASSWORD
    - secure: "Np4rlF9OZFzpblr3b34X+FhL0/Sx3tSs+rZ9Zsn6uk+Vl6UzjAuzqZ8AosiGxyHUNwVdSUNEexYG9iR5O6yQYcn0xcH0YeKmmTMLpkv49JjTo9nODXISXeVFhsOCwPkI45ZmcH0CqQ+sVOq3TnDgb5wZH9lhQgvZz48gJkggL27fJrT2G6y/zM9T2l9CaL3/HQXzrdNVUPgpanSvt+7uJmU1cwC46LJVOOs1uf2TayCqzc1moWZ3Twa21eeubFSF5wCQpsSbkOY4eV6X8iQ41+9cFSo7LQRRWZc2Js1N98eyoFh+4GwSXV1nEE0f3RIP5EczCj/Daf9NFI/o0QNXX4FdPSt/jGBB7rP/XzPX3q0wOR3OYgrBNkmNZmP0yEDcZHPI+hacmAgn7M5u3UGPVjBP5JvOYyklwvqKvMwCMYbljx08yiKsWQmJDRNP8aPsMUNBI+o7vnVNVAkPgt+/fzyGji8Q7bFpzcB55AnW2WGH/AjldSGYi1XemBEaPPX7DbwgDaG08/Okf3ZBN61qU9/4JMkz/SdBxevAjmvc65GWyIXP8zkdRxxV71X4ZO+PgS49ewlTnOr+/OpgDUdkoQfxRxpgCKCm34lwxXONXdUGMigheGjwzpHdpxt+ZQ1ecCzlS4Sk+7VKBpYxhBv8OVMtQr8AoHcn9zfyogewIjE="
  matrix:
    - FLAVOUR=alpine TYPE=base
    - FLAVOUR=alpine TYPE=mods
    - FLAVOUR=alpine TYPE=prod
    - FLAVOUR=alpine TYPE=work
    - FLAVOUR=debian TYPE=base
    - FLAVOUR=debian TYPE=mods
    - FLAVOUR=debian TYPE=prod
    - FLAVOUR=debian TYPE=work


###
### Stage definitions
###
stages:
  - test
  - deploy


###
### Global for all stages
###
install:
  # Get newer docker version
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get update; then break; else i=$((i+1)); fi done
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce; then break; else i=$((i+1)); fi done
  - docker version
script:
  - .ci/start-ci.sh "${IMAGE}" "${FLAVOUR}" "${TYPE}"


###
### Job definitions
###
jobs:
  include:
    - stage: deploy
      env:
        - FLAVOUR=debian TYPE=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ] || [ "${TRAVIS_BRANCH}" == "master" ] || [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-${FLAVOUR}" -f base/Dockerfile.${FLAVOUR} base/ &&
                docker build -t "${IMAGE}:mods-${FLAVOUR}" -f mods/Dockerfile.${FLAVOUR} mods/ &&
                docker build -t "${IMAGE}:prod-${FLAVOUR}" -f prod/Dockerfile.${FLAVOUR} prod/ &&
                docker build -t "${IMAGE}:work-${FLAVOUR}" -f work/Dockerfile.${FLAVOUR} work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}" &&
                docker push "${IMAGE}:base-${FLAVOUR}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
    - stage: deploy
      env:
        - FLAVOUR=alpine TYPE=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ] || [ "${TRAVIS_BRANCH}" == "master" ] || [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-${FLAVOUR}" -f base/Dockerfile.${FLAVOUR} base/ &&
                docker build -t "${IMAGE}:mods-${FLAVOUR}" -f mods/Dockerfile.${FLAVOUR} mods/ &&
                docker build -t "${IMAGE}:prod-${FLAVOUR}" -f prod/Dockerfile.${FLAVOUR} prod/ &&
                docker build -t "${IMAGE}:work-${FLAVOUR}" -f work/Dockerfile.${FLAVOUR} work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}" &&
                docker push "${IMAGE}:base-${FLAVOUR}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
